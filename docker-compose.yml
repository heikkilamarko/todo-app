services:
  caddy:
    build: ./backend/caddy/dev
    image: todo-app/caddy
    container_name: todo-app-caddy
    labels:
      - "com.todo-app.service=caddy"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/caddy.env
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      todo-app:
        aliases:
          - www.todo-app.com
          - auth.todo-app.com

  todo-app:
    build: ./frontend
    image: todo-app/todo-app
    container_name: todo-app
    labels:
      - "com.todo-app.service=todo-app"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/todo-app.env
    networks:
      - todo-app

  todo-api:
    build: ./backend/todo-api
    image: todo-app/todo-api
    container_name: todo-app-todo-api
    labels:
      - "com.todo-app.service=todo-api"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/todo-api.env
    networks:
      - todo-app
    depends_on:
      - db
      - nats-configure

  todo-service:
    build: ./backend/todo-service
    image: todo-app/todo-service
    container_name: todo-app-todo-service
    labels:
      - "com.todo-app.service=todo-service"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/todo-service.env
    networks:
      - todo-app
    depends_on:
      - db
      - nats-configure

  todo-worker:
    build: ./backend/todo-worker
    image: todo-app/todo-worker
    container_name: todo-app-todo-worker
    labels:
      - "com.todo-app.service=todo-worker"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/todo-worker.env
    networks:
      - todo-app
    depends_on:
      - db
      - temporal

  nats:
    build: ./backend/nats
    image: todo-app/nats
    container_name: todo-app-nats
    labels:
      - "com.todo-app.service=nats"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/nats.env
    ports:
      - 4222:4222
    volumes:
      - nats:/nats
    networks:
      - todo-app

  nats-configure:
    build: ./backend/nats-configure
    image: todo-app/nats-configure
    container_name: todo-app-nats-configure
    labels:
      - "com.todo-app.service=nats-configure"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/nats-configure.env
    networks:
      - todo-app
    depends_on:
      - nats

  centrifugo:
    image: centrifugo/centrifugo
    container_name: todo-app-centrifugo
    labels:
      - "com.todo-app.service=centrifugo"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/centrifugo.env
    ports:
      - 8000:8000
    networks:
      - todo-app
    ulimits:
      nofile:
        soft: 65535
        hard: 65535

  temporal:
    build: ./backend/temporal
    image: todo-app/temporal
    container_name: todo-app-temporal
    labels:
      - "com.todo-app.service=temporal"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/temporal.env
    ports:
      - 7233:7233
    networks:
      - todo-app
    depends_on:
      - db

  db:
    build: ./backend/db/postgres
    image: todo-app/db
    container_name: todo-app-db
    labels:
      - "com.todo-app.service=db"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/postgres.env
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - todo-app

  db-migrate:
    build: ./backend/db/migrate
    image: todo-app/db-migrate
    container_name: todo-app-db-migrate
    labels:
      - "com.todo-app.service=db-migrate"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/migrate.env
    networks:
      - todo-app
    depends_on:
      - db

  minio:
    image: minio/minio
    container_name: todo-app-minio
    labels:
      - "com.todo-app.service=minio"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    command: server /data --console-address ":9001"
    env_file:
      - ./env/minio.env
    volumes:
      - minio:/data
    networks:
      - todo-app

  minio-migrate:
    build: ./monitor/minio/migrate
    image: todo-app/minio-migrate
    container_name: todo-app-minio-migrate
    labels:
      - "com.todo-app.service=minio-migrate"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/minio.env
      - ./env/minio-migrate.env
    networks:
      - todo-app
    depends_on:
      - minio

  keycloak:
    build:
      context: ./backend/keycloak/docker
      dockerfile: Dockerfile
    image: todo-app/keycloak
    container_name: todo-app-keycloak
    labels:
      - "com.todo-app.service=keycloak"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/keycloak.env
    networks:
      - todo-app
    depends_on:
      - db

  keycloak-configure:
    build:
      context: ./backend/keycloak/configure
      dockerfile: Dockerfile
    image: todo-app/keycloak-configure
    container_name: todo-app-keycloak-configure
    labels:
      - "com.todo-app.service=keycloak-configure"
      - "com.todo-app.monitor"
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/keycloak-configure.env
    networks:
      - todo-app
    depends_on:
      - keycloak

  loki:
    build: ./monitor/loki
    image: todo-app/loki
    container_name: todo-app-loki
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/minio.env
      - ./env/loki.env
    volumes:
      - loki:/loki
    networks:
      - todo-app
    depends_on:
      - minio

  alloy:
    build: ./monitor/alloy
    image: todo-app/alloy
    container_name: todo-app-alloy
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/alloy.env
    volumes:
      - alloy:/var/lib/alloy/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - todo-app
    depends_on:
      - loki

  grafana:
    build: ./monitor/grafana
    image: todo-app/grafana
    container_name: todo-app-grafana
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ./env/grafana.env
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - todo-app
    depends_on:
      - db
      - loki

networks:
  todo-app:
    name: todo-app

volumes:
  db:
  nats:
  minio:
  grafana:
  loki:
  alloy:
  caddy_data:
  caddy_config:
