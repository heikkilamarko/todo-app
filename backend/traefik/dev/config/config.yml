http:
  routers:
    todo-app:
      rule: Host(`todo-app.com`)
      service: todo-app
      middlewares:
        - env-middleware

    todo-api:
      rule: Host(`api.todo-app.com`)
      service: todo-api
      middlewares:
        - cors-middleware
        - env-middleware

    centrifugo:
      rule: Host(`centrifugo.todo-app.com`)
      service: centrifugo

    keycloak:
      rule: Host(`auth.todo-app.com`)
      service: keycloak

    grafana:
      rule: Host(`grafana.todo-app.com`)
      service: grafana

    temporal:
      rule: Host(`temporal.todo-app.com`)
      service: temporal

    minio:
      rule: Host(`minio.todo-app.com`)
      service: minio

  services:
    todo-app:
      loadBalancer:
        servers:
          - url: http://todo-app

    todo-api:
      loadBalancer:
        servers:
          - url: http://todo-api

    centrifugo:
      loadBalancer:
        servers:
          - url: http://centrifugo:8000

    keycloak:
      loadBalancer:
        servers:
          - url: http://keycloak:8080

    grafana:
      loadBalancer:
        servers:
          - url: http://grafana:3000

    temporal:
      loadBalancer:
        servers:
          - url: http://temporal-ui:8080

    minio:
      loadBalancer:
        servers:
          - url: http://minio-console:9090

  middlewares:
    cors-middleware:
      headers:
        accessControlAllowMethods:
          - OPTIONS
          - GET
          - POST
        accessControlAllowOriginList:
          - http://todo-app.com
          - http://localhost:5173
          - http://127.0.0.1:5173
        accessControlAllowHeaders:
          - Authorization
          - Content-Type
        accessControlMaxAge: 100
        addVaryHeader: true

    env-middleware:
      plugin:
        envplugin:
          env: dev
